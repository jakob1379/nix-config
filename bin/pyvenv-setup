#!/usr/bin/env bash
set -euo pipefail
IFS=$'\n\t'

# Helper function to add a line if it's not already present.
ensure_line_in_file() {
	local line="$1"
	local file="$2"
	# Use grep -F to match the literal string and -q for quiet output.
	if ! grep -qF -- "$line" "$file"; then
		echo "$line" >>"$file"
		echo "Added '$line' to $file"
	else
		echo "Line '$line' already in $file"
	fi
}

uv add --group jga-dev \
	"black" \
	"dap-python" \
	"debugpy" \
	"flake8" \
	"isort" \
	"mypy" \
	"python-lsp-server[all]" \
	"rich" \
	"ruff"

nix flake init --template templates#utils-generic ||
	echo "flake.nix already exists, skipping."

# Ensure .envrc exists before trying to read or write to it.
touch .envrc

# Add 'use flake' directive only if no 'use flake' command is present.
if ! grep -q "use flake" .envrc; then
    ensure_line_in_file "use flake path:." .envrc
else
	echo "'use flake' directive already in .envrc"
fi
# Ensure other required lines are present.
ensure_line_in_file 'export VIRTUAL_ENV=".venv"' .envrc
ensure_line_in_file "layout python" .envrc

echo ".envrc configuration is up to date."
