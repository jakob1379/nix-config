#!/bin/bash

usage() {
    echo "Usage: $0 -N <number_of_repetitions> [-v] <command> [command_args]"
    exit 1
}

calculate_stats() {
    local command=("$@")
    local N=${N:-3}  # Default to 3 if not provided
    local total_time=0
    local total_time_squared=0

    for ((i=1; i<=N; i++)); do
        # Run the command and capture the time statistics
        output=$( (time -p "${command[@]}") 2>&1 )
        real_time=$(echo "$output" | grep real | awk '{print $2}')

        # Accumulate total time and total time squared
        total_time=$(echo "$total_time + $real_time" | bc)
        total_time_squared=$(echo "$total_time_squared + ($real_time * $real_time)" | bc)

        if [[ $verbose -eq 1 ]]; then
            echo "Run $i: $real_time seconds"
        fi
    done

    # Calculate mean
    mean=$(echo "scale=5; $total_time / $N" | bc)

    # Calculate variance
    variance=$(echo "scale=5; ($total_time_squared / $N) - ($mean * $mean)" | bc)

    echo "Command ran in: $meanÂ±$variance seconds"
}

N=3  # Default value for N
verbose=0  # Default verbose mode off

while getopts ":N:v" opt; do
    case $opt in
        N)
            N=$OPTARG
            ;;
        v)
            verbose=1
            ;;
        \?)
            usage
            ;;
    esac
done

shift $((OPTIND - 1))

if [[ $# -lt 1 ]]; then
    usage
fi

command=("$@")
calculate_stats "${command[@]}"
